// Grid system
//
// Generate semantic grid columns with these mixins.
// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin make-grid-flex-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
  }
  #{$list} {
    //position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    margin-left: ceil(($grid-gutter-width / 2));
    margin-right: floor(($grid-gutter-width / 2));
    width: calc(100% - #{$grid-gutter-width});
  }
}


@mixin calc-grid-flex-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .col-#{$class}-#{$index} {
      width: calc( #{percentage(($index / $grid-columns))} -  #{$grid-gutter-width});
    }
  }
  @if ($type == order) and ($index > 0) {
    .col-#{$class}-order-#{$index} {
      order: $index;
    }
  }
  @if ($type == order) and ($index == 0) {
    .col-#{$class}-order-0 {
      order: unset;
    }
  }
  @if ($type == offset) {
    .col-#{$class}-offset-#{$index} {
      margin-left: calc( #{percentage(($index / $grid-columns))} + #{ceil(($grid-gutter-width / 2))} );
    }
  }
}

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-flex-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-flex-column($i, $class, $type);
  }
}


// Create grid for specific class
@mixin make-grid-flex($class) {
  @include loop-grid-flex-columns($grid-columns, $class, width);
  @include loop-grid-flex-columns($grid-columns, $class, order);
  @include loop-grid-flex-columns($grid-columns, $class, offset);
}

//// Generate the extra small columns
//@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {
//  position: relative;
//  float: left;
//  width: percentage(($columns / $grid-columns));
//  min-height: 1px;
//  padding-left:  ($gutter / 2);
//  padding-right: ($gutter / 2);
//}
//@mixin make-xs-column-offset($columns) {
//  margin-left: percentage(($columns / $grid-columns));
//}
//@mixin make-xs-column-push($columns) {
//  left: percentage(($columns / $grid-columns));
//}
//@mixin make-xs-column-pull($columns) {
//  right: percentage(($columns / $grid-columns));
//}
//
//// Generate the small columns
//@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {
//  position: relative;
//  min-height: 1px;
//  padding-left:  ($gutter / 2);
//  padding-right: ($gutter / 2);
//
//  @media (min-width: $screen-sm-min) {
//    float: left;
//    width: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-sm-column-offset($columns) {
//  @media (min-width: $screen-sm-min) {
//    margin-left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-sm-column-push($columns) {
//  @media (min-width: $screen-sm-min) {
//    left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-sm-column-pull($columns) {
//  @media (min-width: $screen-sm-min) {
//    right: percentage(($columns / $grid-columns));
//  }
//}
//
//// Generate the medium columns
//@mixin make-md-column($columns, $gutter: $grid-gutter-width) {
//  position: relative;
//  min-height: 1px;
//  padding-left:  ($gutter / 2);
//  padding-right: ($gutter / 2);
//
//  @media (min-width: $screen-md-min) {
//    float: left;
//    width: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-md-column-offset($columns) {
//  @media (min-width: $screen-md-min) {
//    margin-left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-md-column-push($columns) {
//  @media (min-width: $screen-md-min) {
//    left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-md-column-pull($columns) {
//  @media (min-width: $screen-md-min) {
//    right: percentage(($columns / $grid-columns));
//  }
//}
//
//// Generate the large columns
//@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {
//  position: relative;
//  min-height: 1px;
//  padding-left:  ($gutter / 2);
//  padding-right: ($gutter / 2);
//
//  @media (min-width: $screen-lg-min) {
//    float: left;
//    width: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-lg-column-offset($columns) {
//  @media (min-width: $screen-lg-min) {
//    margin-left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-lg-column-push($columns) {
//  @media (min-width: $screen-lg-min) {
//    left: percentage(($columns / $grid-columns));
//  }
//}
//@mixin make-lg-column-pull($columns) {
//  @media (min-width: $screen-lg-min) {
//    right: percentage(($columns / $grid-columns));
//  }
//}